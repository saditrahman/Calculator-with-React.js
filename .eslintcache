[{"E:\\calc\\src\\index.js":"1","E:\\calc\\src\\reportWebVitals.js":"2","E:\\calc\\src\\App.js":"3","E:\\calc\\src\\components\\Button.js":"4","E:\\calc\\src\\components\\IntroMessage.js":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"7"},{"size":3204,"mtime":1611820362456,"results":"9","hashOfConfig":"7"},{"size":387,"mtime":1611819785869,"results":"10","hashOfConfig":"7"},{"size":756,"mtime":1611820649919,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"nc2up4",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\calc\\src\\index.js",[],["24","25"],"E:\\calc\\src\\reportWebVitals.js",[],"E:\\calc\\src\\App.js",["26"],"import React, { Component } from \"react\";\nimport Button from \"./components/Button\";\nimport \"./css/style.css\";\nimport IntroMessage from \"./components/IntroMessage\";\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      current: \"0\",\n      previous: [],\n      nextIsReset: false,\n    };\n  }\n\n  reset = () => {\n    this.setState({ current: \"0\", previous: [], nextIsReset: false });\n  };\n\n  addToCurrent = (symbol) => {\n    console.log(symbol);\n    if ([\"/\", \"*\", \"-\", \"+\"].indexOf(symbol) > -1) {\n      let { previous } = this.state;\n      previous.push(this.state.current + \" \" + symbol);\n      this.setState({ previous, nextIsReset: true });\n    } else {\n      if (\n        (this.state.current === \"0\" && symbol !== \".\") ||\n        this.state.nextIsReset\n      ) {\n        this.setState({ current: symbol, nextIsReset: false });\n      } else {\n        this.setState({ current: this.state.current + symbol });\n      }\n    }\n  };\n\n  calculate = (symbol) => {\n    let { current, previous } = this.state;\n    if (previous.length > 0) {\n      current = eval(String(previous[previous.length - 1] + current));\n\n      this.setState({ current, previous: [], nextIsReset: true });\n    }\n  };\n\n  backSpace = () => {\n    let { current } = this.state;\n    if (current.length >= 2) {\n      this.setState({ current: current.slice(0, -1) });\n    } else {\n      this.setState({ current: \"0\" });\n    }\n  };\n\n  render() {\n    const buttons = [\n      { symbol: \"C\", cols: 2, action: this.reset },\n      { symbol: \"DEL\", cols: 1, action: this.backSpace },\n      { symbol: \"/\", cols: 1, action: this.addToCurrent },\n      { symbol: \"7\", cols: 1, action: this.addToCurrent },\n      { symbol: \"8\", cols: 1, action: this.addToCurrent },\n      { symbol: \"9\", cols: 1, action: this.addToCurrent },\n      { symbol: \"*\", cols: 1, action: this.addToCurrent },\n      { symbol: \"4\", cols: 1, action: this.addToCurrent },\n      { symbol: \"5\", cols: 1, action: this.addToCurrent },\n      { symbol: \"6\", cols: 1, action: this.addToCurrent },\n      { symbol: \"-\", cols: 1, action: this.addToCurrent },\n      { symbol: \"1\", cols: 1, action: this.addToCurrent },\n      { symbol: \"2\", cols: 1, action: this.addToCurrent },\n      { symbol: \"3\", cols: 1, action: this.addToCurrent },\n      { symbol: \"+\", cols: 1, action: this.addToCurrent },\n      { symbol: \"0\", cols: 2, action: this.addToCurrent },\n      { symbol: \".\", cols: 1, action: this.addToCurrent },\n      { symbol: \"=\", cols: 1, action: this.calculate },\n    ];\n\n    return (\n      <div className=\"App\">\n        <IntroMessage/>\n        <div>\n          {this.state.previous.length > 0 ? (\n            <div className=\"prev-display\">\n              {this.state.previous[this.state.previous.length - 1]}\n            </div>\n          ) : null}\n          <div className=\"result\"> {this.state.current}</div>\n        </div>\n\n        <br />\n        {buttons.map((btn, i) => {\n          return (\n            <Button\n              key={i}\n              symbol={btn.symbol}\n              cols={btn.cols}\n              action={(symbol) => btn.action(symbol)}\n            ></Button>\n          );\n        })}\n      </div>\n    );\n  } w\n}\n\nexport default App;","E:\\calc\\src\\components\\Button.js",[],"E:\\calc\\src\\components\\IntroMessage.js",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":41,"column":17,"nodeType":"33","messageId":"34","endLine":41,"endColumn":21},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"no-eval","eval can be harmful.","CallExpression","unexpected","no-global-assign","no-unsafe-negation"]